{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"PingResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"userDto": {
				"properties": {
					"userId": {
						"type": "number",
						"format": "double"
					},
					"link": {
						"type": "string"
					},
					"isAdmin": {
						"type": "boolean"
					}
				},
				"required": [
					"userId",
					"link",
					"isAdmin"
				],
				"type": "object",
				"additionalProperties": false
			},
			"succesAuthDto": {
				"properties": {
					"user": {
						"$ref": "#/components/schemas/userDto"
					},
					"accessToken": {
						"type": "string"
					},
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"user",
					"accessToken",
					"refreshToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ManySmsRequests": {
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"Слишком часто, повторите попытку позже"
						],
						"nullable": false
					},
					"error": {
						"properties": {
							"type": {
								"type": "string",
								"enum": [
									"ManySmsRequests"
								],
								"nullable": false
							}
						},
						"required": [
							"type"
						],
						"type": "object"
					}
				},
				"required": [
					"message",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"userRigistration": {
				"properties": {
					"userName": {
						"type": "string"
					},
					"login": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"userName",
					"login",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"userLogin": {
				"properties": {
					"login": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"login",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthError": {
				"properties": {
					"message": {
						"type": "string"
					},
					"error": {
						"properties": {
							"type": {
								"type": "string"
							}
						},
						"required": [
							"type"
						],
						"type": "object"
					}
				},
				"required": [
					"message",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"refreshTokens": {
				"properties": {
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"refreshToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccesReq": {
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"success"
						],
						"nullable": false
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"userData": {
				"properties": {
					"userName": {
						"type": "string"
					}
				},
				"required": [
					"userName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Project": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"title"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ThreadsPut": {
				"properties": {
					"title": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					},
					"tag": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"parent_id": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"title",
					"comment",
					"tag",
					"parent_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"user": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"link": {
						"type": "string"
					},
					"isAdmin": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"link",
					"isAdmin"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Thread": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"creation_date": {
						"type": "string",
						"format": "date-time"
					},
					"solver": {
						"allOf": [
							{
								"$ref": "#/components/schemas/user"
							}
						],
						"nullable": true
					},
					"creator": {
						"$ref": "#/components/schemas/user"
					},
					"title": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					},
					"state_done": {
						"type": "number",
						"format": "double"
					},
					"state_error": {
						"type": "number",
						"format": "double"
					},
					"state_none": {
						"type": "number",
						"format": "double"
					},
					"state_skip": {
						"type": "number",
						"format": "double"
					},
					"tag": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"childThreads": {
						"items": {
							"$ref": "#/components/schemas/Thread"
						},
						"type": "array"
					},
					"parent_id": {
						"type": "number",
						"format": "double"
					},
					"reports": {
						"items": {
							"$ref": "#/components/schemas/Reports"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"creation_date",
					"solver",
					"creator",
					"title",
					"state_done",
					"state_error",
					"state_none",
					"state_skip",
					"tag",
					"childThreads",
					"reports"
				],
				"type": "object",
				"additionalProperties": false
			},
			"%24Result.DefaultSelection_Prisma.%24ReportsPayload_": {
				"properties": {
					"url": {
						"type": "string"
					},
					"tredId": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"url",
					"tredId",
					"id"
				],
				"type": "object"
			},
			"Reports": {
				"$ref": "#/components/schemas/%24Result.DefaultSelection_Prisma.%24ReportsPayload_",
				"description": "Model Reports"
			},
			"ThreadsGet": {
				"properties": {
					"proj_id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"proj_id"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"description": "Access Token",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"name": "jwt",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "",
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/ping": {
			"get": {
				"operationId": "GetMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PingResponse"
								}
							}
						}
					}
				},
				"description": "Проверка статуса сервера",
				"security": [],
				"parameters": []
			}
		},
		"/api/registration": {
			"post": {
				"operationId": "Registration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/succesAuthDto"
								}
							}
						}
					},
					"400": {
						"description": "ManySmsRequests",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ManySmsRequests"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Слишком часто, повторите попытку позже",
											"error": {
												"type": "ManySmsRequests"
											}
										}
									}
								}
							}
						}
					}
				},
				"description": "Регистрация пользователя",
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/userRigistration"
							}
						}
					}
				}
			}
		},
		"/api/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/succesAuthDto"
								}
							}
						}
					},
					"400": {
						"description": "ManySmsRequests",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ManySmsRequests"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Слишком часто, повторите попытку позже",
											"error": {
												"type": "ManySmsRequests"
											}
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/userLogin"
							}
						}
					}
				}
			}
		},
		"/api/refresh": {
			"get": {
				"operationId": "RefreshTokens",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/succesAuthDto"
								}
							}
						}
					},
					"400": {
						"description": "AuthErrors",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthError"
								}
							}
						}
					}
				},
				"description": "Получение новой пары access и refresh токенов<br />\nПроверка входных данных refresh токена в `запросе`<br />\nВозвращаемые данные: объект пользователя и пара токенов или сообщение об ошибке, так же токены внутри куки <br />",
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "refreshToken",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/logout": {
			"post": {
				"operationId": "DeleteTokens",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccesReq"
								}
							}
						}
					},
					"400": {
						"description": "AuthErrors",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthError"
								}
							}
						}
					}
				},
				"description": "Получение новой пары access и refresh токенов<br />\nПроверка входных данных refresh токена в `запросе`<br />\nВозвращаемые данные: объект пользователя и пара токенов или сообщение об ошибке, так же токены внутри куки <br />",
				"tags": [
					"user"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/userDto"
							}
						}
					}
				}
			}
		},
		"/api/user": {
			"get": {
				"operationId": "GetUserData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/userData"
								}
							}
						}
					},
					"400": {
						"description": "AuthErrors",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthError"
								}
							}
						}
					}
				},
				"description": "Получение имени пользователя по ID<br />",
				"tags": [
					"user"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/projects": {
			"get": {
				"operationId": "GetProjects",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Project"
									},
									"type": "array"
								}
							}
						}
					},
					"400": {
						"description": "AuthErrors",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthError"
								}
							}
						}
					}
				},
				"description": "Получение Проектов<br />",
				"tags": [
					"Threads"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/thread": {
			"put": {
				"operationId": "AddThread",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccesReq"
								}
							}
						}
					},
					"400": {
						"description": "AuthErrors",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthError"
								}
							}
						}
					}
				},
				"description": "Добавление / Изменение тредов<br />",
				"tags": [
					"Threads"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ThreadsPut"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetThreads",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Thread"
								}
							}
						}
					},
					"400": {
						"description": "AuthErrors",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthError"
								}
							}
						}
					}
				},
				"description": "Получение тредов<br />",
				"tags": [
					"Threads"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "proj_id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}